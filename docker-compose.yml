version: '3.7'

x-default-service: &default-service
  build: .
  image: optimizer-api:${CARTOROUTE_VERSION:-latest}
  environment: &default-environment
    LOG_LEVEL: ${LOG_LEVEL:-info}
    OPTIM_DEFAULT_MAX_LATENESS_RATIO: 1
    OPTIM_GENERATE_GEOJSON_POLYLINES: 'true'
    # REDIS_CACHE_HOST: redis-cache
    REDIS_RESQUE_HOST: redis-resque
    REDIS_RESULT_TTL_DAYS: ${REDIS_RESULT_TTL_DAYS:-1}
    ROUTER_URL: ${ROUTER_URL:-http://localhost:8082/0.1}
    ROUTER_API_KEY: ${ROUTER_API_KEY:-demo}
    SENTRY_DSN: ${SENTRY_DSN:-}
  depends_on:
    - redis-resque
    # - redis-cache
  volumes:
    - .:/srv/app

services:
  optimizer-server:
    <<: *default-service
    ports:
      - "8083:80" # HOST:CONTAINER, edit only HOST part
    networks:
      - private-network
      - public-network
    command: bundle exec puma -v -p 80 --pidfile 'server.pid'
    restart: unless-stopped

  resque-default:
    <<: *default-service
    environment:
      <<: *default-environment
      COUNT: 5
      QUEUES: DEFAULT
    networks:
      - private-network
    command: bundle exec rake resque:workers --trace
    restart: unless-stopped

  redis-resque:
    image: redis:${REDIS_VERSION:-7-alpine}
    networks:
      - private-network
    command: redis-server --appendonly yes
    restart: unless-stopped

networks:
  private-network:
    external: false

  public-network:
    name: public-network

  # redis-cache:
  #   image: redis:${REDIS_VERSION:-7-alpine}
  #   command: redis-server --save ""
