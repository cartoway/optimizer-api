version: '3.3'

services:
  api:
    image: ${REGISTRY}mapotempo/optimizer-api:latest
    ports:
      - mode: host
        target: 80
        published: 8083
    environment:
      APP_ENV: production
      REDIS_HOST: redis-cache
      RESQUE_REDIS_HOST: redis
      SKIP_JSPRIT: 'true'
    networks:
      - redis_cache
      - resque

  resque-default:
    image: ${REGISTRY}mapotempo/optimizer-api:latest
    working_dir: /srv/app
    command: bundle exec rake resque:workers
    hostname: resque-default
    environment:
      APP_ENV: production
      COUNT: 5
      QUEUES: DEFAULT
      REDIS_HOST: redis-cache
      RESQUE_REDIS_HOST: redis
      ROUTER_API_KEY: ${ROUTER_API_KEY:-demo}
      ROUTER_URL: ${ROUTER_URL:-http://localhost:4899/0.1}
    networks:
      - redis_cache
      - resque

  redis:
    image: redis:${REDIS_VERSION:-3.2-alpine}
    volumes:
      - ./redis:/data
    command: redis-server --appendonly yes
    networks:
      - resque
      - ./production.rb:/srv/app/config/environments/production.rb
    restart: always
    links:
      - redis-cache
    command: /bin/bash -c "cd /srv/app && APP_ENV=production COUNT=5 QUEUE=DEFAULT /usr/bin/bundle exec rake resque:workers"

  redis-cache:
    image: redis:${REDIS_VERSION:-3.2-alpine}
    volumes:
      - ./redis:/data
    command: redis-server --save ""
    networks:
      - redis_cache

networks:
  resque:
  redis_cache:
